extends layout

block content
  .row
    .col-md-4 
        .card.card-stats.note
          .card-header
            p="Linkedin şirket linki.."
          .card-body
            .row
              .col-12
                #note(data-id=data && data.id )
                  a(href=linkedin.link target="_blank")= linkedin.link
          .card-footer
            hr
            .stats
              i.fas.fa-edit
              i.fas.fa-paper-plane
              i.fas.fa-trash-alt
              i.fas.fa-ban
              i(class=`fa-rotate fas ${linkedin.checker==1 ? "blue" : ( linkedin.checker==0 ? "green" :"" )   }`) 
    .col-md-12
      .card
        .card-header
          h4.card-title 
        .card-body
          .row
            .col-md-2
              .nav-tabs-navigation.verical-navs
                .nav-tabs-wrapper
                  ul.nav.nav-tabs.flex-column.nav-stacked(role='tablist')
                    li.nav-item
                      a.nav-link.active(href='#game-tab' role='tab' data-toggle='tab') Oyun sayısı 
                    li.nav-item
                      a.nav-link(href='#versiyon-tab' role='tab' data-toggle='tab') Versiyon sayısı 
            .col-md-10
              .tab-content
                #game-tab.tab-pane.active
                  canvas#chartActivityGames
                #versiyon-tab.tab-pane
                  canvas#chartActivityVersions
    .col-md-12
      .card
        .card-body
          .table-responsive
            table.table.table-shopping.table-striped.table-hover
              thead
                tr
                  th Oyun Adı
                  th Tarih
              tbody     
                each item in games   
                    tr.tdata(onauxclick="location.href='/game/"+item.id+"'" onclick=("window.open('/game/"+item.id+"', '_blank');"))
                      td( style="display:none")=item.id
                      td=item.n
                      - let tmp = item.rdd.substring(0,10).split("-")
                      td=tmp[2]+"-"+tmp[1]+"-"+tmp[0]    
  script(src='/javascripts/chart.min.js'  type='text/javascript')
  script.
    var games= !{ ( JSON.stringify(games) || 'null') }
    var ctxg = document.getElementById('chartActivityGames').getContext("2d");
    var ctxv = document.getElementById('chartActivityVersions').getContext("2d");
    var gameCount=[0,0,0,0,0,0,0,0,0,0,0,0]
    var m=new Date().getMonth()
    var y=new Date().getFullYear() 
    games.forEach(x=>{
       try{
          t=new Date(x.rdd)
          if(  diffDay(x.rdd)>335 ) return
          gameCount[t.getMonth()]++
       }catch(error){
         console.log(error)
       }
    })
    let maxVerCount=0;
    games.forEach(g=>{
       var tmp=[0,0,0,0,0,0,0,0,0,0,0,0]
       let vers=g.ver.split(",")
       if(vers.length<=1) return
       vers.forEach(x=> {
          try{
                t=new Date(x)
                if(  diffDay(x)>335 ) return
                tmp[t.getMonth()]++
                if(tmp[t.getMonth()]>maxVerCount) maxVerCount=tmp[t.getMonth()]
          }catch(error){console.log(error)}
       })
       g.data=tmp
    })
    months=months.slice(m+1,months.length).map(x=> x+"\n"+(y-1)).concat(months.slice(0,m+1).map(x=> x+"\n"+y))
    gameCount=gameCount.slice(m+1,gameCount.length).concat(gameCount.slice(0,m+1))
    games.forEach(g=>{
      if(g.data)
      g.data= g.data.slice(m+1, g.data.length).concat( g.data.slice(0,m+1))
    })
    var GAMES= games.filter(x=>x.data).map((x,i)=> { 
              return { label:x.n,data: x.data,backgroundColor: Colors2[i] , id:x.id}
              })
    new Chart(ctxg, {
        type: 'line',
        data: {
            labels: months,
            datasets: [{ label:"#{title}",data: gameCount,borderColor:"#1ABC9C",backgroundColor:"#2ECC71"}], 
        },
        options: {
            scales: {
              y: {
                max: Math.max( ...gameCount )+1,
                min: 0,
                ticks: {
                    stepSize: 1
                    }
                }
            },
          responsive: true,
        }
    });
     new Chart(ctxv, {
        type: 'bar',
        data: {
            labels: months,
            datasets: GAMES,
        },
        options: {
            scales: {
              y: {
                max: maxVerCount+1,
                min: 0,
                ticks: {
                    stepSize: 1
                    }
                }
            },
          responsive: true,
          plugins: {
            legend: {
              position: 'bottom',
              onClick:function(a,e){
                  window.open("/game/"+GAMES[e.datasetIndex].id,"_blank")
                  //console.log(e.datasetIndex)
                },
            },
            title: {
              display: true,
              text: 'Oyunların versiyon miktarları'
            }
          }
        }
    });
  script.
    
    $(function() {
      note="",noteHtml=""
      $( "input[type='checkbox']" ).click(function() {
          event.stopPropagation();
      });
      $( ".cbkutu" ).click(function() {
          event.stopPropagation();
          var tmpStatus=$(this).find("input[type='checkbox']").prop('checked')
          Dynajax('setNotify','l',setChecked,{t:this,rc:tmpStatus},false,{ status:tmpStatus,typeId:[1],targetId:parseInt($(this).attr("data-id"))});
          event.cancelBubble=true
      });
      $(".note").show()
      if ($("#note").text() =="" ){
        $(".note .fa-trash-alt").toggle()
      }
      $(".note .fa-paper-plane").toggle()
      $(".note .fa-ban").toggle()
      $(".note .fa-edit").click(function(){
        note=$("#note").text()
        noteHtml=$("#note").html()
        $("#note").html('<div class="form-group"> <input value="'+note+'" type="text" class="form-control" placeholder="Link.."> </div>  ')
        $(".note .fa-edit,.fa-trash-alt").hide()
        $(".note .fa-paper-plane,.fa-ban").show()
      })
      $(".note .fa-trash-alt").click(function(){
          Dynajax('company_url','n',function(){
            $("#note").html(noteHtml)
            $("#note a").text("")
            $("#note a").attr("href","")
            $(".note .fa-edit,.fa-trash-alt").show()
            $(".note .fa-paper-plane,.fa-ban").hide()
            if ($("#note").text() =="" )
              $(".note .fa-trash-alt").toggle()
          },null,false,{ status:0,targetId:parseInt($("#note").attr("data-id"))});
        })
       $(".note .fa-ban").click(function(){
          $("#note").html(noteHtml)
          $(".note .fa-edit,.fa-trash-alt").show()
          $(".note .fa-paper-plane,.fa-ban").hide()
          if ($("#note").text() =="" ){
            $(".note .fa-trash-alt").toggle()
          }
      }) 
      $(".note .fa-rotate").click(function(){
        if( $(this).hasClass("green") ){
          Dynajax('company_check','s',function(obj,callbackData){
          if(obj.status){
              showNotification('top','right',"success",obj.message);
              $(callbackData).removeClass("green")
              $(callbackData).addClass("blue")
          }
          },this,false,{ targetId:parseInt($("#note").attr("data-id")) });
        }
        
      })
        $(".note .fa-paper-plane").click(function(){
          Dynajax('company_url','n',function(){
            let val=$("#note input").val()
            $("#note").html(noteHtml)
            $("#note a").text(val)
            $("#note a").attr("href",val)
            $(".note .fa-edit,.fa-trash-alt").show()
            $(".note .fa-paper-plane,.fa-ban").hide()
            if ($("#note").text() =="" )
              $(".note .fa-trash-alt").toggle()
          },null,true,{ text:$("#note input").val(),status:1,targetId:parseInt($("#note").attr("data-id"))});
        })
    });