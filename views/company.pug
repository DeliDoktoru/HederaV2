extends layout

block content
  .row
    .col-md-12
      .card
        .card-header
          h4.card-title 
        .card-body
          .row
            .col-md-2
              .nav-tabs-navigation.verical-navs
                .nav-tabs-wrapper
                  ul.nav.nav-tabs.flex-column.nav-stacked(role='tablist')
                    li.nav-item
                      a.nav-link.active(href='#game-tab' role='tab' data-toggle='tab') Oyun sayısı 
                    li.nav-item
                      a.nav-link(href='#versiyon-tab' role='tab' data-toggle='tab') Versiyon sayısı 
            .col-md-10
              .tab-content
                #game-tab.tab-pane.active
                  canvas#chartActivityGames
                #versiyon-tab.tab-pane
                  canvas#chartActivityVersions
    .col-md-12
      .card
        .card-body
          .table-responsive
            table.table.table-shopping.table-striped.table-hover
              thead
                tr
                  th Oyun Adı
                  th Tarih
              tbody     
                each item in games   
                    tr.tdata(onauxclick="location.href='/game/"+item.id+"'" onclick=("window.open('/game/"+item.id+"', '_blank');"))
                      td( style="display:none")=item.id
                      td=item.n
                      - let tmp = item.rdd.substring(0,10).split("-")
                      td=tmp[2]+"-"+tmp[1]+"-"+tmp[0]    
  script(src='/javascripts/chart.min.js'  type='text/javascript')
  script.
    var games= !{ ( JSON.stringify(games) || 'null') }
    Colors2=[
      "#FF0000",
      "#FF8000",
      "#FFFF00",
      "#80112A",
      //"#80FF00",
      "#00FF00",
      "#00FF80",
      "#00FFFF",
      "#0080FF",
      "#0000FF",
      "#7F00FF",
      "#FF00FF",
      "#FF007F",
      "#808080",
      "#011030",
      "#558082",
      "#80AA80",
      "#9f9c57",
      "#ad1d45",
      "#a3c3ff",
      "#99228B",
    ]
    var ctxg = document.getElementById('chartActivityGames').getContext("2d");
    var ctxv = document.getElementById('chartActivityVersions').getContext("2d");
    var gameCount=[0,0,0,0,0,0,0,0,0,0,0,0]
    var m=new Date().getMonth()
    var y=new Date().getFullYear() 
    games.forEach(x=>{
       try{
          t=new Date(x.rdd)
          if(  t.getFullYear()<y &&  t.getMonth()<m  ) return
          gameCount[t.getMonth()]++
       }catch(error){}
    })
    let maxVerCount=0;
    games.forEach(g=>{
       var tmp=[0,0,0,0,0,0,0,0,0,0,0,0]
       g.ver.split(",").forEach(x=> {
          try{
                t=new Date(x)
                if(  t.getFullYear()<y &&  t.getMonth()<m  ) return
                tmp[t.getMonth()]++
                if(tmp[t.getMonth()]>maxVerCount) maxVerCount=tmp[t.getMonth()]
          }catch(error){}
       })
       g.data=tmp
    })
    var months=["OCAK","ŞUBAT","MART","NİSAN","MAYIS","HAZİRAN","TEMMUZ","AĞUSTOS","EYLÜL","EKİM","KASIM","ARALIK"]
    months=months.slice(m+1,months.length).map(x=> x+"\n"+(y-1)).concat(months.slice(0,m+1).map(x=> x+"\n"+y))
    gameCount=gameCount.slice(m+1,gameCount.length).concat(gameCount.slice(0,m+1))
    games.forEach(g=>{
      g.data= g.data.slice(m+1, g.data.length).concat( g.data.slice(0,m+1))
    })
    new Chart(ctxg, {
        type: 'line',
        data: {
            labels: months,
            datasets: [{ label:"#{title}",data: gameCount,borderColor:"#1ABC9C",backgroundColor:"#2ECC71"}], 
        },
        options: {
            scales: {
              y: {
                max: Math.max( ...gameCount )+1,
                min: 0,
                ticks: {
                    stepSize: 1
                    }
                }
            },
          responsive: true,
        }
    });
     new Chart(ctxv, {
        type: 'bar',
        data: {
            labels: months,
            datasets: games.map((x,i)=> { 
              return { label:x.n,data: x.data,backgroundColor: Colors2[i]}
              }),
        },
        options: {
            scales: {
              y: {
                max: maxVerCount+1,
                min: 0,
                ticks: {
                    stepSize: 1
                    }
                }
            },
          responsive: true,
          plugins: {
            legend: {
              position: 'bottom',
              onClick:function(a,e){
                  window.open("/game/"+games[e.datasetIndex].id,"_blank")
                  console.log(e.datasetIndex)
                },
            },
            title: {
              display: true,
              text: 'Oyunların versiyon miktarları'
            }
          }
        }
    });
  script.
    $(function() {
      $( "input[type='checkbox']" ).click(function() {
          event.stopPropagation();
      });
      $( ".cbkutu" ).click(function() {
          event.stopPropagation();
          var tmpStatus=$(this).find("input[type='checkbox']").prop('checked')
          Dynajax('setNotify','l',setChecked,{t:this,rc:tmpStatus},false,{ status:tmpStatus,typeId:[1],targetId:parseInt($(this).attr("data-id"))});
          event.cancelBubble=true
      });
      $(".note").show()
      if ($("#note").text() =="" ){
        $(".note .fa-trash-alt").toggle()
      }
      $(".note .fa-paper-plane").toggle()
      $(".note .fa-ban").toggle()
      $(".note .fa-edit").click(function(){
        note=$("#note").text()
        $("#note").html('<div class="form-group"> <input value="'+note+'" type="text" class="form-control" placeholder="Notunuz.."> </div>  ')
        $(".note .fa-edit,.fa-trash-alt").hide()
        $(".note .fa-paper-plane,.fa-ban").show()
      })
      $(".note .fa-trash-alt").click(function(){
          Dynajax('note','n',basariliReload,null,false,{ status:0,targetType:2,targetId:parseInt($("#note").attr("data-id"))});
        })
       $(".note .fa-ban").click(function(){
          $("#note").html(note)
           $(".note .fa-edit,.fa-trash-alt").show()
        $(".note .fa-paper-plane,.fa-ban").hide()
        if ($("#note").text() =="" ){
        $(".note .fa-trash-alt").toggle()
      }
        }) 
         $(".note .fa-paper-plane").click(function(){
           Dynajax('note','n',basariliReload,null,true,{ text:$("#note input").val(),status:1,targetType:2,targetId:parseInt($("#note").attr("data-id"))});
        })
    });